#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent
import agent.tasks
import os

request = json.load(sys.stdin)

# Get configuration parameters
synapse_domain_name = request.get('synapse_domain_name', '')
element_domain_name = request.get('element_domain_name', '')

if not synapse_domain_name or not element_domain_name:
    print("ERROR: Both synapse_domain_name and element_domain_name are required", file=sys.stderr)
    sys.exit(1)

# Read current environment
env_vars = {}
with open('environment', 'r') as f:
    for line in f:
        line = line.strip()
        if '=' in line and not line.startswith('#'):
            key, value = line.split('=', 1)
            env_vars[key] = value

# Update environment with new configuration
env_vars['SYNAPSE_DOMAIN_NAME'] = synapse_domain_name
env_vars['ELEMENT_DOMAIN_NAME'] = element_domain_name

# Use the allocated TCP port and assign derived ports
base_port = int(os.environ.get('TCP_PORT', '20001'))
env_vars['DEX_PORT'] = str(base_port)
env_vars['SYNAPSE_PORT'] = str(base_port + 1)
env_vars['ELEMENT_PORT'] = str(base_port + 2)

# Write updated environment
with open('environment', 'w') as f:
    for key, value in env_vars.items():
        f.write(f'{key}={value}\n')

# Configure Traefik routes for Synapse Matrix server
response = agent.tasks.run(
    agent_id=agent.resolve_agent_id('traefik@node'),
    action='set-route',
    data={
        'instance': os.environ['MODULE_ID'] + '-synapse',
        'url': 'http://127.0.0.1:' + env_vars['SYNAPSE_PORT'],
        'host': synapse_domain_name,
        'http2https': True,
        'lets_encrypt': True,
    },
)
agent.assert_exp(response['exit_code'] == 0)

# Configure Traefik routes for Element Web client
response = agent.tasks.run(
    agent_id=agent.resolve_agent_id('traefik@node'),
    action='set-route',
    data={
        'instance': os.environ['MODULE_ID'] + '-element',
        'url': 'http://127.0.0.1:' + env_vars['ELEMENT_PORT'],
        'host': element_domain_name,
        'http2https': True,
        'lets_encrypt': True,
    },
)
agent.assert_exp(response['exit_code'] == 0)

print("Matrix module configured successfully")
